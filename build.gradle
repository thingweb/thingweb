/*
 *
 *  * The MIT License (MIT)
 *  *
 *  * Copyright (c) 2016 Siemens AG and the thingweb community
 *  *
 *  * Permission is hereby granted, free of charge, to any person obtaining a copy
 *  * of this software and associated documentation files (the "Software"), to deal
 *  * in the Software without restriction, including without limitation the rights
 *  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  * copies of the Software, and to permit persons to whom the Software is
 *  * furnished to do so, subject to the following conditions:
 *  *
 *  * The above copyright notice and this permission notice shall be included in
 *  * all copies or substantial portions of the Software.
 *  *
 *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  * THE SOFTWARE.
 *
 */


 buildscript {
 	repositories {
 		jcenter()
 	}
 	dependencies {
 		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1+"
 	}
 }

 /*
  * Gets the version name from the latest Git tag
  */
 def getVersionName = { ->
     def stdout = new ByteArrayOutputStream()
     exec {
         commandLine 'git', 'describe', '--tags'
         standardOutput = stdout
     }
     return stdout.toString().trim()
 }

 repositories {
   mavenCentral()
   jcenter()
   mavenLocal()
   maven {
	 url "https://oss.sonatype.org/content/repositories/snapshots"
   }
 }

version = getVersionName()

apply plugin: 'java-library-distribution'
// apply plugin: 'com.jfrog.bintray'

dependencies {
    // let root project depend on all subprojects
    project.subprojects.each { p ->
            compile p
    }
}

distributions {
    main {
        contents {
            from subprojects.collect { it.tasks.withType(Jar) }
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}


// only our subprojects have a bintray configuration. replace the root project's
// `bintrayUpload` task with one that restricts the calls to the subprojects.
// project.afterEvaluate {
//    task bintrayUpload(group: "publishing", overwrite: true) {
//        dependsOn subprojects.bintrayUpload
//    }
// }

subprojects { Project subproject ->
    subproject.apply plugin: 'java'
    subproject.apply plugin: 'eclipse'
    subproject.apply plugin: 'maven'
    subproject.apply plugin:'maven-publish'
    subproject.apply plugin: 'com.jfrog.bintray'

    subproject.repositories {
      mavenCentral()
      jcenter()
      mavenLocal()
	  maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
      }
    }

    subproject.dependencies {
        compile 'org.slf4j:slf4j-api:1.7.12'
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    subproject.version = getVersionName()
    subproject.group = "de.thingweb"

    subproject.sourceCompatibility = 1.8
	subproject.targetCompatibility = 1.8

	subproject.task('sourcesJar', type: Jar, dependsOn: subproject.classes) {
			classifier = 'sources'
			subproject.sourceSets.each { SourceSet ss ->
				from ss.allSource
			}
	}

	subproject.task('javadocJar', type: Jar, dependsOn: javadoc) {
			classifier = 'javadoc'
			from javadoc.destinationDir
	}

	subproject.artifacts {
			archives subproject.sourcesJar, subproject.javadocJar
	}

	subproject.publishing {
			publications {
					mavenJava(MavenPublication) {
							if (plugins.hasPlugin('war')) {
									from components.web
							} else {
									from components.java
							}

							artifact sourcesJar {
									classifier "sources"
							}

							artifact javadocJar {
									classifier "javadoc"
							}
					}
			}
	}

  subproject.bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications  = ['mavenJava']
    publish = true
    pkg {
      name = subproject.group + "." + subproject.name
	  userOrg = 'thingweb'
      repo = 'maven'
      licenses = ['MIT']
      desc = "ThingWeb core components"
      vcsUrl = 'https://github.com/thingweb/thingweb.git'
     }
   }

	subproject.tasks.bintrayUpload.dependsOn subproject.tasks.jar, subproject.tasks.sourcesJar, subproject.tasks.javadocJar

	subproject.tasks.javadoc {
		options.links(
			"http://docs.oracle.com/javase/8/docs/api/",
			"https://google-guice.googlecode.com/git/javadoc/"
		)
		options.linkSource true
	}
}
